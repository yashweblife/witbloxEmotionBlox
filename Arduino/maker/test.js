var fs = require('fs');
var x = ["0x00", "0x00", "0x00", "0x00", "0x00", "0x00", "0x00", "0x00", "0x00", "0x00", "0x00", "0x00", "0x00", "0x00", "0x00", "0x00",
    "0x00", "0x00", "0x0f", "0xff", "0xe0", "0x00", "0x00", "0x00", "0x00", "0x00", "0x00", "0x07", "0xff", "0xe0", "0x00", "0x00",
    "0x00", "0x00", "0xff", "0xff", "0xff", "0x00", "0x00", "0x00", "0x00", "0x00", "0x00", "0xff", "0xff", "0xff", "0x00", "0x00",
    "0x00", "0x03", "0xff", "0xff", "0xff", "0xe0", "0x00", "0x00", "0x00", "0x00", "0x07", "0xff", "0xff", "0xff", "0xc0", "0x00",
    "0x00", "0x0f", "0xff", "0xff", "0xff", "0xf0", "0x00", "0x00", "0x00", "0x00", "0x0f", "0xff", "0xff", "0xff", "0xf0", "0x00",
    "0x00", "0x1f", "0xff", "0xff", "0xff", "0xfc", "0x00", "0x00", "0x00", "0x00", "0x3f", "0xff", "0xff", "0xff", "0xf8", "0x00",
    "0x00", "0x3f", "0xff", "0xff", "0xff", "0xfe", "0x00", "0x00", "0x00", "0x00", "0x7f", "0xff", "0xff", "0xff", "0xfc", "0x00",
    "0x00", "0x3f", "0xff", "0xff", "0xff", "0xff", "0x00", "0x00", "0x00", "0x00", "0xff", "0xff", "0xff", "0xff", "0xfc", "0x00",
    "0x00", "0x7f", "0xff", "0xff", "0xff", "0xff", "0x80", "0x00", "0x00", "0x01", "0xff", "0xff", "0xff", "0xff", "0xfe", "0x00",
    "0x00", "0x7f", "0xff", "0xff", "0xff", "0xff", "0xc0", "0x00", "0x00", "0x03", "0xff", "0xff", "0xff", "0xff", "0xfe", "0x00",
    "0x00", "0xff", "0xff", "0xff", "0xff", "0xff", "0xc0", "0x00", "0x00", "0x03", "0xff", "0xff", "0xff", "0xff", "0xff", "0x00",
    "0x00", "0xff", "0xff", "0xff", "0xff", "0xff", "0xe0", "0x00", "0x00", "0x07", "0xff", "0xff", "0xff", "0xff", "0xff", "0x00",
    "0x00", "0xff", "0xff", "0xff", "0xff", "0xff", "0xe0", "0x00", "0x00", "0x07", "0xff", "0xff", "0xff", "0xff", "0xff", "0x00",
    "0x00", "0xff", "0xff", "0xff", "0xff", "0xff", "0xe0", "0x00", "0x00", "0x07", "0xff", "0xff", "0xff", "0xff", "0xff", "0x00",
    "0x00", "0xff", "0xff", "0xff", "0xff", "0xff", "0xe0", "0x00", "0x00", "0x0f", "0xff", "0xff", "0xff", "0xff", "0xff", "0x00",
    "0x00", "0xff", "0xff", "0xff", "0xff", "0xff", "0xf0", "0x00", "0x00", "0x0f", "0xff", "0xff", "0xff", "0xff", "0xff", "0x00",
    "0x00", "0xff", "0xff", "0xff", "0xff", "0xff", "0xf0", "0x00", "0x00", "0x0f", "0xff", "0xff", "0xff", "0xff", "0xff", "0x00",
    "0x00", "0xff", "0xff", "0xff", "0xff", "0xff", "0xf0", "0x00", "0x00", "0x0f", "0xff", "0xff", "0xff", "0xff", "0xff", "0x00",
    "0x00", "0xff", "0xff", "0xff", "0xff", "0xff", "0xf0", "0x00", "0x00", "0x0f", "0xff", "0xff", "0xff", "0xff", "0xff", "0x00",
    "0x00", "0xff", "0xff", "0xff", "0xff", "0xff", "0xf0", "0x00", "0x00", "0x0f", "0xff", "0xff", "0xff", "0xff", "0xff", "0x00",
    "0x00", "0xff", "0xff", "0xff", "0xff", "0xff", "0xf0", "0x00", "0x00", "0x0f", "0xff", "0xff", "0xff", "0xff", "0xff", "0x00",
    "0x00", "0xff", "0xff", "0xff", "0xff", "0xff", "0xf0", "0x00", "0x00", "0x0f", "0xff", "0xff", "0xff", "0xff", "0xff", "0x00",
    "0x00", "0xff", "0xff", "0xff", "0xff", "0xff", "0xe0", "0x00", "0x00", "0x07", "0xff", "0xff", "0xff", "0xff", "0xfe", "0x00",
    "0x00", "0x7f", "0xff", "0xff", "0xff", "0xff", "0xe0", "0x00", "0x00", "0x07", "0xff", "0xff", "0xff", "0xff", "0xfe", "0x00",
    "0x00", "0x7f", "0xff", "0xff", "0xff", "0xff", "0xc0", "0x00", "0x00", "0x07", "0xff", "0xff", "0xff", "0xff", "0xfe", "0x00",
    "0x00", "0x3f", "0xff", "0xff", "0xff", "0xff", "0xc0", "0x00", "0x00", "0x03", "0xff", "0xff", "0xff", "0xff", "0xfc", "0x00",
    "0x00", "0x1f", "0xff", "0xff", "0xff", "0xff", "0x80", "0x00", "0x00", "0x01", "0xff", "0xff", "0xff", "0xff", "0xf8", "0x00",
    "0x00", "0x0f", "0xff", "0xff", "0xff", "0xfc", "0x00", "0x00", "0x00", "0x00", "0x3f", "0xff", "0xff", "0xff", "0xf0", "0x00",
    "0x00", "0x03", "0xff", "0xff", "0xff", "0xe0", "0x00", "0x00", "0x00", "0x00", "0x07", "0xff", "0xff", "0xff", "0xc0", "0x00",
    "0x00", "0x00", "0xff", "0xff", "0xfc", "0x00", "0x00", "0x00", "0x00", "0x00", "0x00", "0x3f", "0xff", "0xff", "0x00", "0x00",
    "0x00", "0x00", "0x0f", "0xff", "0x00", "0x00", "0x00", "0x00", "0x00", "0x00", "0x00", "0x00", "0xff", "0xf0", "0x00", "0x00",
    "0x00", "0x00", "0x00", "0x00", "0x00", "0x00", "0x00", "0x00", "0x00", "0x00", "0x00", "0x00", "0x00", "0x00", "0x00", "0x00"
];

var segment = [];
var index = [];

for (var i = 0; i < x.length; i++) {
    if (segment.indexOf(x[i]) == -1) {
        segment.push(x[i]);
    }
    index.push(segment.indexOf(x[i]));
}

var compress = "const unsigned char distressed2 [] PROGMEM = {";
for (var i = 0; i < segment.length; i++) {
    if (i != segment.length - 1) {
        compress += segment[i] + ", ";
    } else {
        compress += segment[i];
    }
}
compress += "};int indexes [] PROGMEM = {"

for (var i = 0; i < index.length; i++) {
    if (i != index.length - 1) {
        compress += index[i] + ", ";
    } else {
        compress += index[i];
    }
}
compress += "};"


//console.log(compress);

fs.writeFile("test.h", compress, (err) => {})